import util.RoboticArm;
import java.util.*;

BaxterPlant(
	input String signal command;
	output signal commandFeedback;
   	)
->
{
    RoboticArm rightArmInst = new RoboticArm();
    RoboticArm leftArmInst = new RoboticArm();

    RoboticArm signal rightArm;
    RoboticArm signal leftArm;

    emit rightArm(rightArmInst);
    emit leftArm(leftArmInst);

	// ------------ Command ------------
	{
        RoboticArm virtualRightArm = new RoboticArm();
        RoboticArm virtualLeftArm = new RoboticArm();

        String args;
        StringTokenizer tokens;

        while(true)
        {
            await(command);
            args = (String)#command;

            tokens = new StringTokenizer(args, " ");

            switch(tokens.nextToken())
            {
            case "move_arm":
                switch(tokens.nextToken())
                {
                case "left":
                    virtualLeftArm.setArmStatus(tokens.nextToken());
                case "right:
                    virtualRightArm.setArmStatus(tokens.nextToken());
                }
            case "grip":
                switch(tokens.nextToken())
                {
                case "left":
                    virtualLeftArm.setGripperStatus(tokens.nextToken());
                case "right:
                    virtualRightArm.setGripperStatus(tokens.nextToken());
                }
            case "rotate_hand":
                
            }
            emit commandFeedback;
        }
	}
    // ---------------------------------
    ||
    // ----------- Broadcast -----------
    {
    //    {while(true){emit rightArmV((RoboticArm)#rightArm); pause;}}
    //    ||
    //    {while(true){emit leftArmV((RoboticArm)#leftArm); pause;}}
    }
}