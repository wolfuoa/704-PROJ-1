LidCapperController(
	input signal bottleAtPos4, gripperCylinderRotationAtMax, gripperCylinderRotationAtOrigin, gripperCylinderLifted, gripperCylinderLowered, enableLidCapper;
	output signal gripperCylinderExtend, gripperCylinderRotate, gripperCylinderCounterRotate, gripperCapClampOn, gripperBottleClampOn;
	input Integer channel capBottle;
	output Integer channel capBottleComplete;
   	)
->
{
	while(true)
	{
		receive capBottle;
		// present(bottleAtPos4){
		
		await(enableLidCapper);
		abort(gripperCylinderLowered)
		{
			{sustain gripperBottleClampOn;}
			||
			{sustain gripperCylinderExtend;}
		}
		System.out.println("[DEBUG] lid capper step 1");
		await(!enableLidCapper);
		
		await(enableLidCapper);
		abort(gripperCylinderRotationAtMax)
		{
			{sustain gripperBottleClampOn;}
			||
			{sustain gripperCylinderExtend;}
			||
			{sustain gripperCapClampOn;}
			||
			{sustain gripperCylinderRotate;}
		}
		System.out.println("[DEBUG] lid capper step 2");
		await(!enableLidCapper);
		
		await(enableLidCapper);
		abort(gripperCylinderLifted)
		{
			sustain gripperBottleClampOn;
		}
		System.out.println("[DEBUG] lid capper step 3");
		await(!enableLidCapper);
		
		await(enableLidCapper);
		abort(gripperCylinderRotationAtOrigin)
		{
			sustain gripperCylinderCounterRotate;
		}
		System.out.println("[DEBUG] lid capper step 4");
		await(!enableLidCapper);
		
		send capBottleComplete(0);
	}
}