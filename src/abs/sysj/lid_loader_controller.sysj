LidLoaderController(
		input signal pusherRetracted,pusherExtended,WPgripped,armAtSource,armAtDest,empty,request,bottleAtPos3, enableLidLoader;
		output signal pusherExtend,vacOn,armSource,armDest;

		input Integer channel loadLid;
		output Integer channel loadLidComplete;
		)
->{

	while(true)
	{
		//await(enableLidLoader);
		//System.out.println("enableReceived");
		
		receive loadLid;

		abort(!empty)
		{
			halt;
		}

		abort(armAtDest)
		{
			sustain armDest;
		}

		await(enableLidLoader);
		abort(pusherExtended)
		{
			sustain pusherExtend;
		}
		System.out.println("[DEBUG] lid loader step 1");
		await(!enableLidLoader);
		
		await(enableLidLoader);
		abort(pusherRetracted)
		{
			halt;
		}
		System.out.println("[DEBUG] lid loader step 2");
		await(!enableLidLoader);
		
		await(enableLidLoader);
		abort(armAtSource)
		{
			sustain armSource;
		}
		System.out.println("[DEBUG] lid loader step 3");
		await(!enableLidLoader);
		
		await(enableLidLoader);
		abort(WPgripped)
		{
			sustain vacOn;
		}
		System.out.println("[DEBUG] lid loader step 4");
		await(!enableLidLoader);
		
		await(enableLidLoader);
		abort(armAtDest)
		{
			emit armDest;
			emit vacOn;
			pause;
		}
		System.out.println("[DEBUG] lid loader step 5");
		await(!enableLidLoader);

		send loadLidComplete(0);
	}
}