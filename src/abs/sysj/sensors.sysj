Sensors(
	input signal conveyorPlantOn, rotaryTurntablePlantOn;
	output signal bottleAtPos1, bottleAtPos2, bottleAtPos3, bottleAtPos4, bottleAtPos5, turntableAlignedWithSensor, overflowSensed;
	output signal bottleAtPos1V, bottleAtPos2V, bottleAtPos3V, bottleAtPos4V, bottleAtPos5V, capBottleCompleteV, capBottleIncompleteV;

	input Integer channel rotateStepCompleteToSensors, logQuantityLiquidFilled, capBottleCompleteSensors;
   	)
->
{
	// --------------- Private Signal ---------------
	boolean signal bottleAtPos1Reg;
	boolean signal bottleAtPos2Reg;
	boolean signal bottleAtPos3Reg;
	boolean signal bottleAtPos4Reg;
	boolean signal bottleAtPos5Reg;
	int signal totalFluidInCurrentBottle;
	int signal capBottleCompleteMemory;
	// ----------------------------------------------

	emit bottleAtPos1Reg(false);
	emit bottleAtPos2Reg(false);
	emit bottleAtPos3Reg(false);
	emit bottleAtPos4Reg(false);
	emit bottleAtPos5Reg(false);
	emit totalFluidInCurrentBottle(0);
	emit capBottleCompleteMemory(0);

	// ---------------- bottleAtPos1 ----------------
	{
		while(true)
		{
			await(conveyorPlantOn);
			if ( true ) //bottleAtPos0
			{
				emit bottleAtPos1Reg(true);
				emit bottleAtPos5Reg(false);
			}
		}
	}
	// ----------------------------------------------
	||
	// ----------- tableAlignedWithSensor -----------
	{
		while(true)
		{

			
			await(rotaryTurntablePlantOn);
			if ( true )
			{
				abort(!rotaryTurntablePlantOn)
				{
					sustain turntableAlignedWithSensor;
				}
			}
		}
	}
	// ----------------------------------------------
	||
	// ----------- Local Bottle Pos Shift -----------
	{
		while(true)
		{
			receive rotateStepCompleteToSensors;
			emit bottleAtPos5Reg((Boolean)#bottleAtPos4Reg);
			emit bottleAtPos4Reg((Boolean)#bottleAtPos3Reg);
			emit bottleAtPos3Reg((Boolean)#bottleAtPos2Reg);
			emit bottleAtPos2Reg((Boolean)#bottleAtPos1Reg);
			emit bottleAtPos1Reg(false);
			System.out.println("Turn");

			emit capBottleCompleteMemory(0);

			pause;
		}	
	}
	// ----------------------------------------------
	||
	// ----------- Liquid Filler Overflow -----------
	{
		int totalFluidInBottle = 0;
		while(true)
		{	
			receive logQuantityLiquidFilled;
			
			if((Integer)#logQuantityLiquidFilled == -1)
			{
				totalFluidInBottle = 0;
			}
			else
			{
				totalFluidInBottle += (Integer)#logQuantityLiquidFilled;
			}
			emit totalFluidInCurrentBottle(totalFluidInBottle);
			pause;
		}	
	}
	// ----------------------------------------------
	||
	// ------------- Overflow Broadcast -------------
	{
		{while(true){if((Integer)#totalFluidInCurrentBottle > 200){emit overflowSensed; System.out.println("Error");} pause;}}
	}
	// ----------------------------------------------
	||
	// --------- Cap Bottle Complete Signal ---------
	{
		while(true)
		{
			receive capBottleCompleteSensors;
			emit capBottleCompleteMemory(1);
			pause;
		}
	}
	// ----------------------------------------------
	||
	// --------- Broadcast Complete Signals ---------
	{
		{while(true){if((Integer)#capBottleCompleteMemory == 1){emit capBottleCompleteV; System.out.println("CapComplete");} else {emit capBottleIncompleteV; System.out.println("CapIncomplete");} pause;}}
	}
	// ----------------------------------------------
	||
	// ----------- Bottle Position Memory -----------
	{
		{while(true){if((Boolean)#bottleAtPos1Reg){emit bottleAtPos1; emit bottleAtPos1V;} pause;}}
		||
		{while(true){if((Boolean)#bottleAtPos2Reg){emit bottleAtPos2; emit bottleAtPos2V;} pause;}}
		||
		{while(true){if((Boolean)#bottleAtPos3Reg){emit bottleAtPos3; emit bottleAtPos3V;} pause;}}
		||
		{while(true){if((Boolean)#bottleAtPos4Reg){emit bottleAtPos4; emit bottleAtPos4V;} pause;}}
		||
		{while(true){if((Boolean)#bottleAtPos5Reg){emit bottleAtPos5; emit bottleAtPos5V;} pause;}}
	}
	// ----------------------------------------------
}