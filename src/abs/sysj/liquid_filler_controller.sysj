LiquidFillerController(
    input signal bottleAtPos2, dosUnitEvac;
    input Integer signal liquidLoaded, dosUnitFilled;
    input signal liquidFormula;
    output signal valveInletOn, valveInjectorOn, dosUnitValveExtend;
    output Integer signal loadLiquid, dosUnitValveRetract;

    input Integer channel fillBottle;
    output Integer channel fillBottleComplete;
    )
->
{

    // TODO: Send channel data to sensors - When a bottle is filled with a portion of liquid sum it to keep track
    // Send a clearing signal to the sensors when the bottle is completely filled

    await(liquidFormula);

//    while(true)
//    {
//        {receive fillBottle;}// || {receive liquidFormula;}
//        // present(bottleAtPos2){}
//
//        // TODO: Implement JSON reading
//
//        for(int liquid_num = 0; liquid_num < 4; liquid_num++)
//        {
//            trap(E)
//            {
//                abort(liquidLoaded)
//                {
//                    sustain loadLiquid(liquid_num);
//                }
//                    
//                if((Integer)#liquidLoaded != liquid_num)
//                {
//                    exit(E);
//                }
//            }
//            do
//            {
//                // Error
//            }
//
//            abort(dosUnitFilled)
//            {
//                {sustain valveInjectorOn;}
//                ||
//                {sustain dosUnitValveRetract;}
//            }
//
//            abort(dosUnitEvac)
//            {
//                {sustain valveInletOn;}
//                ||
//                {sustain dosUnitValveExtend;}
//            }
//        }
//
//        send fillBottleComplete;
//    }
}